name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'    # trigger on all branches

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run Django tests
        run: |
          python manage.py check
          python manage.py test
      
      - name: Run linters
        run: |
          flake8 lettings profiles oc_lettings_site

      - name: Run pytest
        run: |
          pytest --maxfail=1 --disable-warnings
  
  containerize:
    needs: build-and-test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Get short commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/oclet-docker:${{ steps.vars.outputs.sha_short }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/oclet-docker:${{ steps.vars.outputs.sha_short }} ${{ secrets.DOCKERHUB_USERNAME }}/oclet-docker:latest

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oclet-docker:${{ steps.vars.outputs.sha_short }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oclet-docker:latest
  
  deploy-production:
    needs: containerize
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/oclet-app:latest
            docker stop ocletapp || true
            docker rm ocletapp || true
            docker run -d --env-file /home/ubuntu/.env -p 8000:8000 --name ocletapp ${{ secrets.DOCKERHUB_USERNAME }}/oclet-docker:latest
 